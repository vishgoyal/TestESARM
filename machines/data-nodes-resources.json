{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Base uri of resources"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
      },
      "defaultValue": ""
    },
    "vm": {
      "type": "object",
      "metadata": {
        "description": "vm configuration"
      }
    },
    "storageSettings": {
      "type": "object",
      "metadata": {
        "description": "Storage Account Settings"
      }
    },
    "dataDisks": {
      "type": "object",
      "defaultValue": {
        "disks": []
      },
      "metadata": {
        "description": "additional data disks to attach"
      }
    },
    "elasticTags": {
      "type": "object",
      "defaultValue": {
        "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
      },
      "metadata": {
        "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
      }
    }
  },
  "variables": {
    "namespace": "[parameters('vm').namespace]",
    "password_osProfile": {
      "computername": "[variables('namespace')]",
      "adminUsername": "[parameters('vm').shared.credentials.adminUsername]",
      "adminPassword": "[parameters('vm').shared.credentials.password]"
    },
    "vsSetCount": "[add(div(sub(parameters('vm').count, 1), 100), 1)]",
    "diskCount": "[if(greater(parameters('storageSettings').dataDisks, 0), parameters('storageSettings').dataDisks, 1)]"
  },
  "resources": [
    {
      "apiVersion": "2019-03-01",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "location": "[parameters('vm').shared.location]",
      "tags": {
        "provider": "[toUpper(parameters('elasticTags').provider)]"
      },
      "copy": {
        "name": "[concat(variables('namespace'),'vs-loop')]",
        "count": "[variables('vsSetCount')]"
      },
      "name": "[concat(variables('namespace'), 'vs-set')]",
      "sku": {
        "name": "Standard_A2",
        "tier": "Standard",
        "capacity": "2"
      },
      "properties": {
        "overprovision": "true",
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "imageReference": "[parameters('vm').imageReference]",
            "osDisk": {
              "managedDisk": {
                "storageAccountType": "[parameters('vm').storageAccountType]"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage"
            },
            "dataDisks": [
              {
                "name": "[concat(variables('namespace'), copyindex(), '-datadisk')]",
                "diskSizeGB": "[parameters('storageSettings').diskSize]",
                "lun": 0,
                "managedDisk": {
                  "storageAccountType": "[parameters('storageSettings').accountType]"
                },
                "caching": "None",
                "createOption": "Empty"
              }
            ]
          },
          "osProfile": "[variables(concat(parameters('vm').shared.credentials.authenticationType, '_osProfile'))]",
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('namespace'), copyIndex(), '-nic'))]"
              }
            ]
          },

          "extensionProfile": {
            "extensions": [
              {
                "name": "[concat(variables('namespace'), copyIndex(), '/script')]",
                "properties": "[parameters('vm').installScript]"
              }
            ]
          }
        }
      }
    },
    {
      "condition": "[greater(parameters('storageSettings').dataDisks, 0)]",
      "name": "[concat(variables('namespace'), copyindex(), '-vm-creation')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-05-01",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('namespace'), 'vs-set')]"
      ],
      "copy": {
        "name": "[concat(variables('namespace'),'vm-creation-loop')]",
        "count": "[parameters('vm').count]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(parameters('_artifactsLocation'), concat('partials/vm.json', parameters('_artifactsLocationSasToken')))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vm": {
            "value": "[parameters('vm')]"
          },
          "index": {
            "value": "[copyindex()]"
          },
          "virtualMachineScaleSet": {
            "value": "[concat(variables('namespace'), 'vs-set')]"
          },
          "dataDisks": {
            "value": {
              "copy": [
                {
                  "name": "disks",
                  "count": "[variables('diskCount')]",
                  "input": {
                    "name": "[concat(variables('namespace'), copyindex(), '-datadisk', copyIndex('disks', 1))]",
                    "diskSizeGB": "[parameters('storageSettings').diskSize]",
                    "lun": "[copyIndex('disks')]",
                    "managedDisk": {
                      "storageAccountType": "[parameters('storageSettings').accountType]"
                    },
                    "caching": "None",
                    "createOption": "Empty"
                  }
                }
              ]
            }
          },
          "elasticTags": {
            "value": "[parameters('elasticTags')]"
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('storageSettings').dataDisks, 0)]",
      "name": "[concat(variables('namespace'), copyindex(), '-vm-nodisks-creation')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-05-01",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('namespace'), 'vs-set')]"
      ],
      "copy": {
        "name": "[concat(variables('namespace'),'vm-creation-loop')]",
        "count": "[parameters('vm').count]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(parameters('_artifactsLocation'), concat('partials/vm.json', parameters('_artifactsLocationSasToken')))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vm": {
            "value": "[parameters('vm')]"
          },
          "index": {
            "value": "[copyindex()]"
          },
          "virtualMachineScaleSet": {
            "value": "[concat(variables('namespace'), 'vs-set')]"
          },
          "elasticTags": {
            "value": "[parameters('elasticTags')]"
          }
        }
      }
    }
  ]
}